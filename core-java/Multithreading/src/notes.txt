
=== Information of classes ===

1. ThreadTest.java - Basics of Thread

2. Task.java - new Sample Thread i.e. Task

3. ExecutorServiceTest.java - how to Execute multiple threads. -  
   							  Executors.newSingleThreadExecutor(),
   							  Executors.newFixedThreadPool(5), 
   							  execute(Runnable command)

4. CallableTask.java - new Callable Task with return result

5. CallableServiceTest.java - Submitting CallableTask using ExecutorService & getting its result upon task completion
						    - Future<String> result =  submit(new CallableTask("arjun"));

6. MultipleCallableServiceTest.java - Submitting Multiple CallableTask using ExeutorService & 
				
				List<CallableTask> taskList = List.of(new CallableTask("Arjun"), new CallableTask("Ranga"), new CallableTask("Atharva"));
				List<Future<String>> taskResults = executorService.invokeAll(taskList);
				
				for (Future<String> future : taskResults) {
					System.out.println(future.get());
				}

7. ProblemWithoutSync.java - demonstrate the problem without synchronization

8. SynchronizationTest.java - synchronized method example

9. SynchronizationBlockTest.java - synchronized block example

10. StaticSynchronizationTest.java - static synchronized method example

11. DeadLockDemo.java - Demonstrate the example of how deadlock between thread can occur

  

